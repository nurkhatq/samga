#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
"""
import asyncio
import sys
import os
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from sqlalchemy import select
from app.db.session import async_session_maker
from app.models.user import User
from app.core.security import get_password_hash


async def create_admin():
    """–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    
    # –ß–∏—Ç–∞–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
    username = os.getenv("FIRST_ADMIN_USERNAME", "admin")
    password = os.getenv("FIRST_ADMIN_PASSWORD", "admin123")
    full_name = os.getenv("FIRST_ADMIN_FULLNAME", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
    
    print("=" * 60)
    print("üîê –°–û–ó–î–ê–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
    print("=" * 60)
    print(f"–õ–æ–≥–∏–Ω: {username}")
    print(f"–§–ò–û: {full_name}")
    print(f"–†–æ–ª—å: admin")
    print("=" * 60)
    
    async with async_session_maker() as db:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
            result = await db.execute(
                select(User).where(User.username == username)
            )
            existing = result.scalar_one_or_none()
            
            if existing:
                print(f"\n‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
                existing.password_hash = get_password_hash(password)
                existing.role = "admin"
                existing.full_name = full_name
                existing.is_active = True
                await db.commit()
                print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω!")
                return
            
            # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin = User(
                username=username,
                password_hash=get_password_hash(password),
                full_name=full_name,
                role="admin",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞–ø—Ä—è–º—É—é
                is_active=True
            )
            
            db.add(admin)
            await db.commit()
            await db.refresh(admin)
            
            print(f"\n‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω!")
            print(f"   ID: {admin.id}")
            print(f"   –õ–æ–≥–∏–Ω: {admin.username}")
            print(f"   –§–ò–û: {admin.full_name}")
            print("\nüéâ –ì–æ—Ç–æ–≤–æ!\n")
        
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
            await db.rollback()
            sys.exit(1)


if __name__ == "__main__":
    asyncio.run(create_admin())