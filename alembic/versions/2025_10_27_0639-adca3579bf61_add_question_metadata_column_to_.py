"""Add question_metadata column to questions

Revision ID: adca3579bf61
Revises: c8db65e354ab
Create Date: 2025-10-27 06:39:01.089643

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'adca3579bf61'
down_revision: Union[str, None] = 'c8db65e354ab'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('exam_answers', 'id',
               existing_type=sa.UUID(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.create_index(op.f('ix_exam_answers_id'), 'exam_answers', ['id'], unique=False)
    op.alter_column('exam_attempts', 'mode',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('practice', 'exam', name='exammode', native_enum=False),
               existing_nullable=False)
    op.alter_column('exam_attempts', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('in_progress', 'completed', 'expired', 'cancelled', name='examstatus', native_enum=False),
               existing_nullable=False)
    op.alter_column('majors', 'magistracy_type',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.Enum('profile', 'scientific_pedagogical', name='magistracytype'),
               existing_nullable=False)
    op.add_column('proctoring_events', sa.Column('event_type', sa.Enum('COPY', 'PASTE', 'CUT', 'TAB_SWITCH', 'WINDOW_BLUR', 'FULLSCREEN_EXIT', 'CONTEXT_MENU', 'CONSOLE_OPEN', 'RIGHT_CLICK', name='proctoring_event_type'), nullable=False))
    op.alter_column('proctoring_events', 'id',
               existing_type=sa.UUID(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.create_index('idx_attempt_event_type', 'proctoring_events', ['attempt_id', 'event_type'], unique=False)
    op.create_index(op.f('ix_proctoring_events_event_type'), 'proctoring_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_proctoring_events_id'), 'proctoring_events', ['id'], unique=False)
    op.add_column('questions', sa.Column('question_metadata', sa.JSON(), nullable=False))
    op.alter_column('questions', 'options',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False)
    op.alter_column('questions', 'difficulty',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('A', 'B', 'C', name='question_difficulty'),
               existing_nullable=False)
    op.alter_column('questions', 'question_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('SINGLE', 'MULTIPLE', name='question_type'),
               existing_nullable=False)
    op.alter_column('questions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('questions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_questions_question_type', table_name='questions')
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.alter_column('subjects', 'title_kk',
               existing_type=sa.VARCHAR(length=300),
               type_=sa.String(length=500),
               existing_nullable=False)
    op.alter_column('subjects', 'title_ru',
               existing_type=sa.VARCHAR(length=300),
               type_=sa.String(length=500),
               nullable=True)
    op.alter_column('subjects', 'subject_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('general', 'profile', name='subjecttype', native_enum=False),
               existing_nullable=False)
    op.alter_column('subjects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('subjects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_subjects_code'), 'subjects', ['code'], unique=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('student', 'admin', 'moderator', name='userrole', native_enum=False),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.drop_index('ix_users_username', table_name='users')
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_major_code'), 'users', ['major_code'], unique=False)
    op.create_foreign_key(None, 'users', 'majors', ['major_code'], ['code'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_major_code'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'role',
               existing_type=sa.Enum('student', 'admin', 'moderator', name='userrole', native_enum=False),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
    op.drop_index(op.f('ix_subjects_code'), table_name='subjects')
    op.alter_column('subjects', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('subjects', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('subjects', 'subject_type',
               existing_type=sa.Enum('general', 'profile', name='subjecttype', native_enum=False),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('subjects', 'title_ru',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=300),
               nullable=False)
    op.alter_column('subjects', 'title_kk',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=300),
               existing_nullable=False)
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.create_index('ix_questions_question_type', 'questions', ['question_type'], unique=False)
    op.alter_column('questions', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('questions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('questions', 'question_type',
               existing_type=sa.Enum('SINGLE', 'MULTIPLE', name='question_type'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('questions', 'difficulty',
               existing_type=sa.Enum('A', 'B', 'C', name='question_difficulty'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('questions', 'options',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.drop_column('questions', 'question_metadata')
    op.drop_index(op.f('ix_proctoring_events_id'), table_name='proctoring_events')
    op.drop_index(op.f('ix_proctoring_events_event_type'), table_name='proctoring_events')
    op.drop_index('idx_attempt_event_type', table_name='proctoring_events')
    op.alter_column('proctoring_events', 'id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('proctoring_events', 'event_type')
    op.alter_column('majors', 'magistracy_type',
               existing_type=sa.Enum('profile', 'scientific_pedagogical', name='magistracytype'),
               type_=sa.VARCHAR(length=30),
               existing_nullable=False)
    op.alter_column('exam_attempts', 'status',
               existing_type=sa.Enum('in_progress', 'completed', 'expired', 'cancelled', name='examstatus', native_enum=False),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('exam_attempts', 'mode',
               existing_type=sa.Enum('practice', 'exam', name='exammode', native_enum=False),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.drop_index(op.f('ix_exam_answers_id'), table_name='exam_answers')
    op.alter_column('exam_answers', 'id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###
